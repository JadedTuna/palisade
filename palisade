#!/usr/bin/env python3
from pprint import pprint
from tokenizer import Tokenizer
from parser import Parser
from symbolize import symbolize
from type_check import type_check
from security import *

from traverse import make_traverse

SRC = """
if (1) {
  xxx = 27;
  y = 5;
} else if (2)
  y = true;
else while (5) y = 2;
"""
SRC2 = """
x = 0xAB8 + -y * a >> 7 || 2;


x = a ^ b == c;
x = a == b ^ c;

x = a >> b == c;
x = a == b >> c;

x = (a + b) == c;
x = a == (b + c);
x = a >> b == c;
x = a == b >> c;
x = a || b + c;
"""
SRC3 = """
+ - / * % ^ & | = == != >= <= << >> || &&
"""

TODO1 = """
fn foo() {
  low z = 10 + y;
  low x = 20;
}

high x = 20;
foo();
"""

SRC = """

high y = 20;
y = ~20;

if (10 <= 0) {
  low z = 10 + y;
  low x = 20;
} else {
  low uuu = false;
}

high x = 20;

x = 7 + 8;
x = 27;

"""

SRC = """
high z = true;
if (z) {
  z = false;
  debug z;
  low x = z;
}

"""

tokenizer = Tokenizer(SRC)
tokenizer.tokenize()

parser = Parser(tokenizer.tokens)
ast = parser.parse()

ast = symbolize(ast.symtab, ast)
ast = assign_security_labels(ast)
security_debug(ast)
ast = check_explicit_flows(ast)
ast = type_check(ast)


# pprint(ast)
